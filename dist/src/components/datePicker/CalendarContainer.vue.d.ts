import { DefineComponent, ComponentOptionsMixin, PublicProps, ComponentProvideOptions } from 'vue';
declare const _default: DefineComponent<{}, {
    $emit: (event: "update:modelValue", ...args: any[]) => void;
    variant: string;
    texts: Record<string, any>;
    disabled: boolean;
    mode: string;
    locale: string;
    closeMenu: Function;
    openMenu: Function;
    firstDayOfTheWeek: number;
    localizedMonthsList: unknown[];
    weekDaysList: unknown[];
    menuState: boolean;
    cadenceOfMinutes: number;
    clearIfNotExact: boolean;
    pickerType: string;
    activeInput: string;
    setActiveInput: Function;
    id?: string;
    modelValue?: string | Record<string, any> | Date;
    specialDatesAttributes?: unknown[];
    minDateRef?: string | Date;
    maxDateRef?: string | Date;
    $props: {
        readonly variant?: string;
        readonly texts?: Record<string, any>;
        readonly disabled?: boolean;
        readonly mode?: string;
        readonly locale?: string;
        readonly closeMenu?: Function;
        readonly openMenu?: Function;
        readonly firstDayOfTheWeek?: number;
        readonly localizedMonthsList?: unknown[];
        readonly weekDaysList?: unknown[];
        readonly menuState?: boolean;
        readonly cadenceOfMinutes?: number;
        readonly clearIfNotExact?: boolean;
        readonly pickerType?: string;
        readonly activeInput?: string;
        readonly setActiveInput?: Function;
        readonly id?: string;
        readonly modelValue?: string | Record<string, any> | Date;
        readonly specialDatesAttributes?: unknown[];
        readonly minDateRef?: string | Date;
        readonly maxDateRef?: string | Date;
    };
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, ComponentProvideOptions, true, {}, any>;
export default _default;
