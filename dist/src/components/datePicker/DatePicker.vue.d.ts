import { DefineComponent, ComponentOptionsMixin, PublicProps, ComponentProvideOptions } from 'vue';
declare const _default: DefineComponent<{}, {
    $emit: (event: "update:modelValue", ...args: any[]) => void;
    invalid: boolean;
    required: boolean;
    variant: string;
    texts: Record<string, any>;
    disabled: boolean;
    mode: string;
    locale: string;
    firstDayOfTheWeek: number;
    cadenceOfMinutes: number;
    clearIfNotExact: boolean;
    pickerType: string;
    masks: Record<string, any>;
    legacyMode: boolean;
    id?: string;
    modelValue?: string | Record<string, any> | Date;
    labelledBy?: string;
    placeholder?: string;
    invalidationMessage?: string;
    specialDatesAttributes?: unknown[];
    minDate?: string | Date;
    maxDate?: string | Date;
    $props: {
        readonly invalid?: boolean;
        readonly required?: boolean;
        readonly variant?: string;
        readonly texts?: Record<string, any>;
        readonly disabled?: boolean;
        readonly mode?: string;
        readonly locale?: string;
        readonly firstDayOfTheWeek?: number;
        readonly cadenceOfMinutes?: number;
        readonly clearIfNotExact?: boolean;
        readonly pickerType?: string;
        readonly masks?: Record<string, any>;
        readonly legacyMode?: boolean;
        readonly id?: string;
        readonly modelValue?: string | Record<string, any> | Date;
        readonly labelledBy?: string;
        readonly placeholder?: string;
        readonly invalidationMessage?: string;
        readonly specialDatesAttributes?: unknown[];
        readonly minDate?: string | Date;
        readonly maxDate?: string | Date;
    };
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, ComponentProvideOptions, true, {}, any>;
export default _default;
