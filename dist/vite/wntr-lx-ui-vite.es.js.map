{"version":3,"file":"wntr-lx-ui-vite.es.js","sources":["../../src/vite/secureHeadersPlugin.js","../../src/utils/global.js","../../src/hooks/useLx.js","../../src/vite/portalVersionPlugin.js"],"sourcesContent":["import { createHash } from 'crypto';\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [reportOnly=false] - Whether to use Content-Security-Policy-Report-Only header instead of Content-Security-Policy header. For development purposes.\n * @property {boolean} [processI18n=true] - Whether to process i18n\n * @property {string} [noncePlaceholder='NONCE_PLACEHOLDER'] - The placeholder for nonce in the HTML\n * @property {string} [xssProtection='1; mode=block'] - Value for X-XSS-Protection header\n * @property {string} [frameOptions='DENY'] - Value for X-Frame-Options header\n * @property {string} [contentTypeOptions='nosniff'] - Value for X-Content-Type-Options header\n * @property {string} [referrerPolicy='strict-origin-when-cross-origin'] - Value for Referrer-Policy header\n * @property {string} [permissionsPolicy='camera=(), microphone=(), geolocation=()'] - Value for Permissions-Policy header\n * @property {string} [cacheControl='no-store, max-age=0'] - Value for Cache-Control header\n * @property {(nonce: string) => string} [scriptSrc] - Function to generate script-src directive in CSP\n * @property {(nonce: string) => string} [styleSrc] - Function to generate style-src directive in CSP\n * @property {string} [imgSrc=\"'self' data:\"] - Value for img-src directive in CSP\n * @property {string} [fontSrc=\"'self'\"] - Value for font-src directive in CSP\n * @property {string} [objectSrc=\"'none'\"] - Value for object-src directive in CSP\n * @property {string} [baseUri=\"'self'\"] - Value for base-uri directive in CSP\n * @property {string} [formAction=\"'self'\"] - Value for form-action directive in CSP\n * @property {string} [frameAncestors=\"'none'\"] - Value for frame-ancestors directive in CSP\n * @property {string} [workerSrc=\"'self'\"] - Value for worker-src directive in CSP\n * @property {string} [connectSrc=\"'self'\"] - Value for connect-src directive in CSP\n */\n\n/**\n * Generates a nonce value if serve\n * @returns {string} The generated nonce\n */\nconst createNonce = () => createHash('sha256').update(Date.now().toString()).digest('base64');\n\n/**\n * Creates a Vite plugin for handling Content Security Policy with nonce and i18n processing\n * @param {Options} [options={}]\n * @returns {import('vite').Plugin}\n */\nexport function lxViteSecureHeadersPlugin(/** @type {Options} */ options = {}) {\n  const {\n    reportOnly = false,\n    processI18n = true,\n    noncePlaceholder = 'NONCE_PLACEHOLDER',\n    xssProtection = '1; mode=block',\n    frameOptions = 'DENY',\n    contentTypeOptions = 'nosniff',\n    referrerPolicy = 'strict-origin-when-cross-origin',\n    permissionsPolicy = 'camera=(), microphone=(), geolocation=()',\n    cacheControl = 'no-store, max-age=0',\n    scriptSrc,\n    styleSrc,\n    imgSrc = \"'self' data:\",\n    fontSrc = \"'self'\",\n    objectSrc = \"'none'\",\n    baseUri = \"'self'\",\n    formAction = \"'self'\",\n    frameAncestors = \"'none'\",\n    workerSrc = \"'self'\",\n    connectSrc = \"'self'\",\n  } = options;\n\n  let sharedNonce;\n\n  return {\n    name: 'vite-plugin-csp-nonce',\n    enforce: 'post',\n    config(config, configEnv) {\n      // eslint-disable-next-line no-param-reassign\n      config.resolve = config.resolve || {};\n      // eslint-disable-next-line no-param-reassign\n      config.resolve.alias = config.resolve.alias || {};\n      if (processI18n) {\n        // eslint-disable-next-line no-param-reassign\n        config.plugins = config.plugins || [];\n        const isServing = configEnv.command === 'serve';\n        let vueI18nPath = 'vue-i18n/dist/vue-i18n.esm-browser.prod.js';\n        if (isServing) {\n          vueI18nPath = 'vue-i18n/dist/vue-i18n.esm-browser.js';\n        }\n        // eslint-disable-next-line no-param-reassign\n        config.resolve.alias['vue-i18n'] = vueI18nPath;\n      }\n      return config;\n    },\n    configResolved(config) {\n      const isServing = config.command === 'serve';\n      sharedNonce = isServing ? createNonce() : noncePlaceholder;\n      // @ts-ignore\n      // eslint-disable-next-line no-param-reassign\n      config.html = config.html || {};\n      // @ts-ignore\n      // eslint-disable-next-line no-param-reassign\n      config.html.cspNonce = sharedNonce;\n    },\n    /**\n     * @param {import('vite').ViteDevServer} server\n     */\n    configureServer(server) {\n      server.middlewares.use((req, res, next) => {\n        const nonce = sharedNonce;\n\n        const scriptSrcValue = scriptSrc ? scriptSrc(nonce) : `'self' 'nonce-${nonce}'`;\n        const styleSrcValue = styleSrc ? styleSrc(nonce) : `'self' 'nonce-${nonce}'`;\n\n        const csp = [\n          \"default-src 'self'\",\n          `script-src ${scriptSrcValue}`,\n          `style-src ${styleSrcValue}`,\n          `img-src ${imgSrc}`,\n          `font-src ${fontSrc}`,\n          `object-src ${objectSrc}`,\n          `base-uri ${baseUri}`,\n          `form-action ${formAction}`,\n          `frame-ancestors ${frameAncestors}`,\n          `worker-src ${workerSrc}`,\n          `connect-src ${connectSrc}`,\n          'upgrade-insecure-requests',\n        ].join('; ');\n\n        const cspHeaderName = reportOnly\n          ? 'Content-Security-Policy-Report-Only'\n          : 'Content-Security-Policy';\n        res.setHeader(cspHeaderName, csp);\n\n        if (xssProtection) res.setHeader('X-XSS-Protection', xssProtection);\n        if (frameOptions) res.setHeader('X-Frame-Options', frameOptions);\n        if (contentTypeOptions) res.setHeader('X-Content-Type-Options', contentTypeOptions);\n        if (referrerPolicy) res.setHeader('Referrer-Policy', referrerPolicy);\n        if (permissionsPolicy) res.setHeader('Permissions-Policy', permissionsPolicy);\n        if (cacheControl) res.setHeader('Cache-Control', cacheControl);\n\n        next();\n      });\n    },\n    /**\n     * @param {string} html\n     * @param {import('vite').IndexHtmlTransformContext} _ctx\n     */\n    // eslint-disable-next-line no-unused-vars\n    transformIndexHtml(html, _ctx) {\n      const nonce = sharedNonce;\n\n      const injectNonceScript = `\n        <script nonce=\"${nonce}\">\n          (function() {\n            const originalCreateElement = document.createElement;\n            document.createElement = function() {\n              const element = originalCreateElement.apply(document, arguments);\n              if (arguments[0].toLowerCase() === 'style' || arguments[0].toLowerCase() === 'script') {\n                element.nonce = \"${nonce}\";\n              }\n              return element;\n            };\n            // Override insertBefore to add nonce to dynamically inserted style tags\n            const originalInsertBefore = Element.prototype.insertBefore;\n            Element.prototype.insertBefore = function(newNode, referenceNode) {\n              if (newNode.tagName && newNode.tagName.toLowerCase() === 'style' && !newNode.nonce) {\n                newNode.nonce = \"${nonce}\";\n              }\n              return originalInsertBefore.call(this, newNode, referenceNode);\n            };\n            // Override appendChild to add nonce to dynamically inserted style tags\n            const originalAppendChild = Element.prototype.appendChild;\n            Element.prototype.appendChild = function(newNode) {\n              if (newNode.tagName && newNode.tagName.toLowerCase() === 'style' && !newNode.nonce) {\n                newNode.nonce = \"${nonce}\";\n              }\n              return originalAppendChild.call(this, newNode);\n            };\n          })();\n        </script>\n      `;\n\n      const linkRegex = /<link\\s+([^>]*)>/g;\n\n      return html\n        .replace(/<script/g, `<script nonce=\"${nonce}\"`)\n        .replace(/<style/g, `<style nonce=\"${nonce}\"`)\n        .replace(linkRegex, (match, attributes) => {\n          let newAttributes = attributes.replace(/\\s*\\/\\s*$/, '');\n          if (!newAttributes.includes('nonce=')) {\n            newAttributes += ` nonce=\"${nonce}\"`;\n          }\n          return `<link ${newAttributes.trim()}>`;\n        })\n        .replace(/style=\"/g, `style=\"nonce=\"${nonce}\" `)\n        .replace('</head>', `${injectNonceScript}</head>`);\n    },\n    /**\n    //@param {import('rollup').OutputOptions} buildOptions\n    //@param {import('rollup').OutputBundle} bundle\n     */\n    // @ts-ignore\n    generateBundle(buildOptions, bundle) {\n      const nonce = sharedNonce;\n      const linkRegex = /<link\\s+([^>]*?)(\\/?\\s*>)/g;\n\n      return Object.keys(bundle).reduce((acc, fileName) => {\n        const chunk = bundle[fileName];\n        if (chunk.type === 'asset' && chunk.fileName.endsWith('.html')) {\n          return {\n            ...acc,\n            [fileName]: {\n              ...chunk,\n              source: chunk.source\n                // @ts-ignore\n                .replace(/<script/g, `<script nonce=\"${nonce}\"`)\n                .replace(/<style/g, `<style nonce=\"${nonce}\"`)\n                // @ts-ignore\n                .replace(linkRegex, (match, attributes) => {\n                  let newAttributes = attributes.replace(/\\s*\\/\\s*$/, '');\n                  if (!newAttributes.includes('nonce=')) {\n                    newAttributes += ` nonce=\"${nonce}\"`;\n                  }\n                  return `<link ${newAttributes.trim()}>`;\n                })\n                .replace(/style=\"/g, `style=\"nonce=\"${nonce}\" `),\n            },\n          };\n        }\n        return {\n          ...acc,\n          [fileName]: chunk,\n        };\n      }, {});\n    },\n  };\n}\n","let globalProperties = {};\n\nexport const setGlobalProperties = (props) => {\n  globalProperties = props;\n};\n\nexport const getGlobalProperties = () => globalProperties;\n","import { getGlobalProperties } from '@/utils/global';\n\nexport default () => {\n  /**\n   * @typedef {Object} GlobalProperties\n   * @property {string} [environment] - The current environment\n   * @property {string} [iconSet] - The current icon set\n   * @property {string} [dateFormat] - The current date format\n   * @property {string} [dateTimeFormat] - The current date time format\n   * @property {string} [dateTimeFullFormat] - The current date time full format\n   */\n\n  /**\n   * Get the global properties\n   * @returns {GlobalProperties} The global properties\n   */\n  const getGlobals = () => {\n    const instance = getGlobalProperties();\n    if (!instance) return null;\n    return instance;\n  };\n\n  return {\n    getGlobals,\n  };\n};\n","import { promises as fs } from 'fs';\nimport path from 'path';\nimport { loadEnv } from 'vite';\nimport useLx from '@/hooks/useLx';\n\n/**\n * @typedef {Object} PortalVersionOptions\n * @property {string} [outDir] - Custom output directory for version.json (defaults to vite build.outDir with fallback 'dist')\n */\n\n/**\n * Creates a Vite plugin for version.json generation for both development and production\n * @param {PortalVersionOptions} [options] - Plugin options\n * @returns {import('vite').Plugin}\n */\nexport function lxVitePortalVersionPlugin(options = {}) {\n  let outDir = 'dist';\n  let config;\n  // In-memory version data for development mode\n  let versionData = null;\n\n  /**\n   * Generates the version data object\n   * @returns {Promise<Object>} The version data\n   */\n  async function generateVersionData() {\n    try {\n      const env = loadEnv(useLx().getGlobals()?.environment, process.cwd(), '');\n\n      // Get package.json path\n      const packageJsonPath = path.resolve(process.cwd(), 'package.json');\n      // Read package.json and extract version\n      const packageJson = JSON.parse(await fs.readFile(packageJsonPath, 'utf-8'));\n\n      return {\n        version: env.CUSTOM_VERSION || packageJson.version,\n        buildTime: new Date().toISOString(),\n      };\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error('❌ Error generating version data:', error);\n      return { version: 'unknown', buildTime: new Date().toISOString() };\n    }\n  }\n\n  /**\n   * Generates the version.json file for production build\n   */\n  async function generateVersionFile() {\n    try {\n      // Get version data\n      const data = await generateVersionData();\n\n      // In build mode, write to output directory\n      const targetDir = path.resolve(process.cwd(), outDir);\n\n      // Ensure directory exists\n      try {\n        await fs.access(targetDir);\n      } catch (error) {\n        await fs.mkdir(targetDir, { recursive: true });\n      }\n\n      // Write version.json file\n      const versionPath = path.resolve(targetDir, 'version.json');\n      await fs.writeFile(versionPath, JSON.stringify(data, null, 2), 'utf-8');\n\n      // eslint-disable-next-line no-console\n      console.log(`✅ Version file generated at ${versionPath}`);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error('❌ Error generating version file:', error);\n    }\n  }\n\n  return {\n    name: 'vite-plugin-portal-version',\n\n    configResolved(resolvedConfig) {\n      // Store config for later use\n      config = resolvedConfig;\n      outDir = options.outDir || config.build?.outDir || 'dist';\n    },\n\n    // For development mode, initialize in-memory version data\n    async buildStart() {\n      if (config.command === 'serve') {\n        versionData = await generateVersionData();\n        // eslint-disable-next-line no-console\n        console.log('✅ In-memory version data initialized:', versionData);\n      }\n    },\n\n    // For production build, generate the physical file\n    async closeBundle() {\n      if (config.command === 'build') {\n        await generateVersionFile();\n      }\n    },\n\n    // In development, serve version.json from memory\n    configureServer(server) {\n      // Add a watcher to update in-memory version data when package.json changes\n      const packageJsonPath = path.resolve(process.cwd(), 'package.json');\n\n      server.watcher.add(packageJsonPath);\n      server.watcher.on('change', async (changedPath) => {\n        if (changedPath === packageJsonPath) {\n          versionData = await generateVersionData();\n          // eslint-disable-next-line no-console\n          console.log('📦 package.json changed, in-memory version data updated:', versionData);\n        }\n      });\n\n      // Add special route to manually trigger version changes for testing\n      server.middlewares.use(async (req, res, next) => {\n        // Special route to update version for testing\n        if (req.url === '/__update_version') {\n          try {\n            // Generate new version data with current timestamp\n            versionData = await generateVersionData();\n            // Force a different buildTime to simulate a version change\n            versionData.buildTime = new Date().toISOString();\n            // eslint-disable-next-line no-console\n            console.log('🔄 Version manually updated for testing:', versionData);\n            res.setHeader('Content-Type', 'application/json');\n            res.statusCode = 200;\n            res.end(\n              JSON.stringify({\n                success: true,\n                message: 'Version updated for testing',\n                versionData,\n              })\n            );\n          } catch (error) {\n            res.statusCode = 500;\n            res.end(JSON.stringify({ error: 'Failed to update version' }));\n          }\n          return;\n        }\n\n        // Handle version.json requests during development\n        if (req.url.startsWith('/version.json')) {\n          try {\n            // If version data isn't initialized yet, generate it\n            if (!versionData) {\n              versionData = await generateVersionData();\n            }\n\n            // Serve the in-memory version data with correct headers\n            res.setHeader('Content-Type', 'application/json');\n            res.statusCode = 200;\n            res.end(JSON.stringify(versionData));\n          } catch (error) {\n            // eslint-disable-next-line no-console\n            console.error('Error serving version.json:', error);\n            res.statusCode = 500;\n            res.end(JSON.stringify({ error: 'Failed to serve version.json' }));\n          }\n        } else {\n          next();\n        }\n      });\n    },\n  };\n}\n"],"names":["createNonce","createHash","lxViteSecureHeadersPlugin","options","reportOnly","processI18n","noncePlaceholder","xssProtection","frameOptions","contentTypeOptions","referrerPolicy","permissionsPolicy","cacheControl","scriptSrc","styleSrc","imgSrc","fontSrc","objectSrc","baseUri","formAction","frameAncestors","workerSrc","connectSrc","sharedNonce","config","configEnv","isServing","vueI18nPath","server","req","res","next","nonce","scriptSrcValue","styleSrcValue","csp","cspHeaderName","html","_ctx","injectNonceScript","linkRegex","match","attributes","newAttributes","buildOptions","bundle","acc","fileName","chunk","globalProperties","getGlobalProperties","useLx","instance","lxVitePortalVersionPlugin","outDir","versionData","generateVersionData","env","loadEnv","packageJsonPath","path","packageJson","fs","error","generateVersionFile","data","targetDir","versionPath","resolvedConfig","changedPath"],"mappings":"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"}